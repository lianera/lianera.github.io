<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>程序 on Lianera&#39;s homepage</title>
    <link>https://lianera.github.io/tags/%E7%A8%8B%E5%BA%8F/</link>
    <description>Recent content in 程序 on Lianera&#39;s homepage</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 08 Apr 2019 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://lianera.github.io/tags/%E7%A8%8B%E5%BA%8F/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Magic Plain v2</title>
      <link>https://lianera.github.io/post/2017/magicplainv2/</link>
      <pubDate>Wed, 26 Jul 2017 00:00:00 +0000</pubDate>
      <guid>https://lianera.github.io/post/2017/magicplainv2/</guid>
      <description>&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;img src=&#34;menu.png&#34; alt=&#34;menu&#34;&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;img src=&#34;levels.png&#34; alt=&#34;levels&#34;&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;img src=&#34;playing.png&#34; alt=&#34;playing&#34;&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;img src=&#34;victory.png&#34; alt=&#34;playing&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;简介&#34;&gt;简介&lt;/h2&gt;&#xA;&lt;p&gt;一个类似炸弹超人的游戏，三年多前用Java写过第一版，这段时间用JavaScript结合&lt;a href=&#34;http://phaser.io/&#34;&gt;Phaser&lt;/a&gt;游戏引擎重写了一次。&lt;/p&gt;&#xA;&lt;h2 id=&#34;游戏设计&#34;&gt;游戏设计&lt;/h2&gt;&#xA;&lt;p&gt;游戏里面总共分为四幕，分别为草原、地下城、戈壁、雪地，以底色和砖块来进行区分，每一幕都有若干关卡，最终形成一个网状路径，通过最终关卡即算胜利。&lt;/p&gt;</description>
    </item>
    <item>
      <title>球谐光照（Spherical Harmonics Lighting）及其应用-应用篇</title>
      <link>https://lianera.github.io/post/2017/sh-lighting-apply/</link>
      <pubDate>Mon, 27 Feb 2017 00:00:00 +0000</pubDate>
      <guid>https://lianera.github.io/post/2017/sh-lighting-apply/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://lianera.github.io/post/2016/sh-lighting-exp&#34;&gt;上一篇&lt;/a&gt;介绍了球谐函数的一些原理和性质，本篇主要介绍如何实现球谐光照，将这种光照应用到实际的场景中去。&lt;/p&gt;&#xA;&lt;p&gt;我们知道，球谐光照实际上就是将周围的环境光采样成几个系数，然后渲染的时候用这几个系数来对光照进行还原，这种过程可以看做是对周围环境光的简化，从而简化计算过程。因为如果按照采样的方法进行渲染，每次渲染的时候都得对周围环境采样，从而都会耗费大量的计算时间。所以球谐光照的实现可以分成两个部分，一是环境光贴图的采样和积分运算，生成球谐参数，二是利用球谐参数对模型进行渲染。&lt;/p&gt;</description>
    </item>
    <item>
      <title>球谐光照（Spherical Harmonics Lighting）及其应用-实验篇</title>
      <link>https://lianera.github.io/post/2016/sh-lighting-exp/</link>
      <pubDate>Tue, 06 Dec 2016 00:00:00 +0000</pubDate>
      <guid>https://lianera.github.io/post/2016/sh-lighting-exp/</guid>
      <description>&lt;h2 id=&#34;简介&#34;&gt;简介&lt;/h2&gt;&#xA;&lt;p&gt;之前在一篇实时深度图优化的论文中看到球谐光照（Spherical Harmonics Lighting）的应用，在查阅了许许多多资料之后还是无法完全理解，我个人觉得如果之前对实时渲染技术不是很了解的话，球谐光照还是有一定难度的。大多数的资料都是从原理上描述球谐函数及其光照过程，而没有对具体的应用做解释，我直到真正动手实现了一遍球谐光照之后，才完全理解球谐光照具体的过程以及作用。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Sudoku</title>
      <link>https://lianera.github.io/post/2015/sudoku/</link>
      <pubDate>Sat, 10 Jan 2015 00:00:00 +0000</pubDate>
      <guid>https://lianera.github.io/post/2015/sudoku/</guid>
      <description>&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;img src=&#34;sudoku.png&#34; alt=&#34;&#34;&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;img src=&#34;sudoku2.png&#34; alt=&#34;&#34;&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;img src=&#34;sudoku3.png&#34; alt=&#34;&#34;&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;简介&#34;&gt;简介&lt;/h2&gt;&#xA;&lt;p&gt;数独程序，解题的目的是根据9×9盘面上的已知数字，推理出所有剩余空格的数字，并满足每一行、每一列、每一个粗线宫内的数字均含1-9，不重复。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Game2048</title>
      <link>https://lianera.github.io/post/2014/game2048/</link>
      <pubDate>Thu, 18 Sep 2014 00:00:00 +0000</pubDate>
      <guid>https://lianera.github.io/post/2014/game2048/</guid>
      <description>&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;img src=&#34;game2048.png&#34; alt=&#34;&#34;&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;img src=&#34;game2048_1.png&#34; alt=&#34;&#34;&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;简介&#34;&gt;简介&lt;/h2&gt;&#xA;&lt;p&gt;这是一个用Java写的实现2048游戏的程序，加入了人工智能，能够自动运行。&lt;/p&gt;&#xA;&lt;h2 id=&#34;技术&#34;&gt;技术&lt;/h2&gt;&#xA;&lt;p&gt;项目引入MVC架构的思想，将逻辑与界面分离。这个程序的难点在于AI算法，刚开始我的想法是用Alpha-Beta剪枝算法，但是效果不是很好，后面又改用了贪婪算法，虽然贪婪算法简单，但是结果并没有明显变差，重要的是评估函数的设定。评估函数的指标设置有：总的分数、总的步数、空格数、最大的离中心的距离、相邻数之差。经过多次的实验和指标权重的调整，使得评估的结果有了提升。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Magic Plain</title>
      <link>https://lianera.github.io/post/2013/magicplain/</link>
      <pubDate>Tue, 31 Dec 2013 00:00:00 +0000</pubDate>
      <guid>https://lianera.github.io/post/2013/magicplain/</guid>
      <description>&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;img src=&#34;magicplain1.png&#34; alt=&#34;&#34;&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;img src=&#34;magicplain2.png&#34; alt=&#34;&#34;&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;img src=&#34;magicplain3.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;img src=&#34;magicplain4.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;简介&#34;&gt;简介&lt;/h2&gt;&#xA;&lt;p&gt;一个用Java写的2D的游戏，类似于炸弹超人，不过比炸弹超人内容更加丰富。不仅道具的种类很多，而且炸弹爆炸效果也是多种多样的。游戏设置了多个场景，十六张地图，每个场景的道具都不相同。&lt;/p&gt;</description>
    </item>
    <item>
      <title>贪吃蛇（二）</title>
      <link>https://lianera.github.io/post/2013/snake2/</link>
      <pubDate>Sun, 07 Jul 2013 00:00:00 +0000</pubDate>
      <guid>https://lianera.github.io/post/2013/snake2/</guid>
      <description>&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;img src=&#34;snake2_menu.png&#34; alt=&#34;&#34;&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;img src=&#34;snake2_1.png&#34; alt=&#34;&#34;&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;img src=&#34;snake2_2.png&#34; alt=&#34;&#34;&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;简介&#34;&gt;简介&lt;/h2&gt;&#xA;&lt;p&gt;传统的贪吃蛇游戏，实现蛇的移动、进食、增长以及死亡过程，并统计所得分数。游戏面板划分为许多小格，蛇移动时每次只移动一格。食物随机放置，但不能放到蛇身。每进食一次，蛇身增长一格，得分相应增加。蛇碰到边界时转到对面边界出来。当蛇头碰到自身时，蛇死亡，游戏结束。&lt;/p&gt;</description>
    </item>
    <item>
      <title>贴吧用户ID挖掘机</title>
      <link>https://lianera.github.io/post/2012/tiebadigger/</link>
      <pubDate>Sun, 23 Dec 2012 00:00:00 +0000</pubDate>
      <guid>https://lianera.github.io/post/2012/tiebadigger/</guid>
      <description>&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;img src=&#34;TiebaDigger.png&#34; alt=&#34;&#34;&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;img src=&#34;TiebaDigger2.png&#34; alt=&#34;&#34;&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;简介&#34;&gt;简介&lt;/h2&gt;&#xA;&lt;p&gt;这是一个用来挖掘贴吧用户ID的程序，能够将某个贴吧的所有用户名都按格式记录下来，可用于@大量用户。&lt;/p&gt;&#xA;&lt;h2 id=&#34;技术&#34;&gt;技术&lt;/h2&gt;&#xA;&lt;p&gt;程序用C语言写成的，使用Windows网络编程。采用socket通信发出get请求，返回含有贴吧ID的页面，得到页面源码后，程序对其进行解析，提取ID信息并格式化保存。&lt;/p&gt;</description>
    </item>
    <item>
      <title>装甲之战</title>
      <link>https://lianera.github.io/post/2012/panzerwar/</link>
      <pubDate>Sat, 01 Dec 2012 00:00:00 +0000</pubDate>
      <guid>https://lianera.github.io/post/2012/panzerwar/</guid>
      <description>&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;img src=&#34;panzerwar1.png&#34; alt=&#34;&#34;&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;img src=&#34;panzerwar2.png&#34; alt=&#34;&#34;&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;简介&#34;&gt;简介&lt;/h2&gt;&#xA;&lt;p&gt;坦克游戏，通过控制坦克消灭敌人获取胜利。&lt;/p&gt;&#xA;&lt;h2 id=&#34;技术&#34;&gt;技术&lt;/h2&gt;&#xA;&lt;p&gt;这个程序也是刚学C的时候做的，一边学C一边参考Windows API写程序。程序采用的是纯Windows编程，没有涉及MFC。游戏的架构就是典型的GameLoop实时游戏架构，采用Windows GDI进行绘图，同时在绘图上也采用了双缓存技术。这个程序由于没有采用模块化的方法，导致函数过多，后期维护混乱。不过最后还是成功做好了！&lt;/p&gt;</description>
    </item>
    <item>
      <title>俄罗斯方块（二）</title>
      <link>https://lianera.github.io/post/2012/blockgame/</link>
      <pubDate>Tue, 20 Nov 2012 00:00:00 +0000</pubDate>
      <guid>https://lianera.github.io/post/2012/blockgame/</guid>
      <description>&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;img src=&#34;blockgame1.png&#34; alt=&#34;&#34;&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;img src=&#34;blockgame2.png&#34; alt=&#34;&#34;&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;img src=&#34;blockgame3.png&#34; alt=&#34;&#34;&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;简介&#34;&gt;简介&lt;/h2&gt;&#xA;&lt;p&gt;俄罗斯方块游戏。&lt;/p&gt;&#xA;&lt;h2 id=&#34;技术&#34;&gt;技术&lt;/h2&gt;&#xA;&lt;p&gt;纯控制台程序，画面全部由字符组成，具有存档功能。&lt;/p&gt;&#xA;&lt;p&gt;在刚刚学C语言的时候写的。那个时候分模块的概念不是很强，所有函数写在一个文件里面，使得代码有些乱。怀着完美主义的精神写的，做得很细致，就连界面的那几个英文字母都是用字符一个个堆起来的。虽然花了几天时间才做成，不过那时候觉得能做出一点东西挺高兴的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>俄罗斯方块（一）</title>
      <link>https://lianera.github.io/post/2008/tetris/</link>
      <pubDate>Wed, 26 Nov 2008 00:00:00 +0000</pubDate>
      <guid>https://lianera.github.io/post/2008/tetris/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;tetris.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;简介&#34;&gt;简介&lt;/h2&gt;&#xA;&lt;p&gt;经典的俄罗斯方块。&lt;/p&gt;&#xA;&lt;h2 id=&#34;技术&#34;&gt;技术&lt;/h2&gt;&#xA;&lt;p&gt;中学时期作品，使用了双缓存技术。那时觉得程序无所不能，虽然对程序的认识比较肤浅，但总想做一些东西出来，这个程序采用的是MFC，结合Windows的绘图技术做成的。绘图方面使用了双缓存技术提高画面的流畅度，避免闪烁。&lt;/p&gt;</description>
    </item>
    <item>
      <title>贪吃蛇（一）</title>
      <link>https://lianera.github.io/post/2008/snake1/</link>
      <pubDate>Wed, 26 Nov 2008 00:00:00 +0000</pubDate>
      <guid>https://lianera.github.io/post/2008/snake1/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;snake1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;简介&#34;&gt;简介&lt;/h2&gt;&#xA;&lt;p&gt;经典的贪吃蛇小游戏。&lt;/p&gt;&#xA;&lt;h2 id=&#34;技术&#34;&gt;技术&lt;/h2&gt;&#xA;&lt;p&gt;程序采用了OOP和模块化的思想，使得逻辑比较清晰，不过虽然是面向对象设计的，但也只是简单地建立类，并没有充分利用面向对象的特性。此外，界面与逻辑没有实现分离，导致程序的可重用性很低。采用Windows编程构造窗口界面，基于实时游戏的框架，利用消息处理机制处理用户输入，用定时器的方法按一定时间间隔刷新游戏内容并更新界面。游戏背景音乐采用MIDI，音效采用wav。&lt;/p&gt;</description>
    </item>
    <item>
      <title>按键助手</title>
      <link>https://lianera.github.io/post/2008/keyhelper/</link>
      <pubDate>Sun, 12 Oct 2008 00:00:00 +0000</pubDate>
      <guid>https://lianera.github.io/post/2008/keyhelper/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;keyhelper.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;简介&#34;&gt;简介&lt;/h2&gt;&#xA;&lt;p&gt;一个类似于按键精灵的程序，能够录制鼠标和键盘的动作，定义和编辑动作，播放动作。&lt;/p&gt;&#xA;&lt;h2 id=&#34;技术&#34;&gt;技术&lt;/h2&gt;&#xA;&lt;p&gt;这个程序还是中学时期写的，那个时候对程序非常感兴趣，自学了一些C++便觉得自己可以写一些东西出来。虽然当时水平比较低，但是完全能够凭着热情去完成每一个程序。那个时候很喜欢写跟界面有关的东西，认知也停留在桌面应用上面，以为程序就是用来开发桌面应用的。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
